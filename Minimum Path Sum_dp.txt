class Solution {
public:
    int minPathSum(vector<vector<int>>& grid)
    {
    	if (grid.empty()) return 0;
	int m = grid.size();
	int n = grid[0].size();

	vector<vector<int>> dp(m, vector<int>(n, 0));
	dp[0][0] = grid[0][0];
	for (int i = 1; i < n; i++)
	{
		dp[0][i] = grid[0][i] + dp[0][i-1];
	}
	for (int j = 1; j < m; j++)
	{
		dp[j][0] = grid[j][0] + dp[j-1][0];
	}
	for (int y = 1; y < m; y++)
	{
		for (int x = 1; x < n; x++)
		{
			dp[y][x] = grid[y][x] + min(dp[y - 1][x], dp[y][x - 1]);
		}
	}

	return dp[m-1][n-1];
    }

};
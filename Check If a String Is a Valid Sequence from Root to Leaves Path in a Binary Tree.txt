/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isValidSequence(TreeNode* root, vector<int>& arr) 
    {
        return check(root,arr,0);
    }
    bool check(TreeNode* node,vector<int>& arr,int level) 
    {
        if(node==NULL) return false;   
        if(level == arr.size()-1 && node->val == arr[level] && node->left==NULL && node->right==NULL) return true; //最底層的node 
        else if(level < arr.size() && node->val == arr[level]) // 非底層左右選驗，需判斷層數不超過arr的長度否則會runtime error
        {
            return check(node->left,arr,level+1) || check(node->right,arr,level+1); 
        }
        else return false;
    }

};
class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) 
    {
        int right = nums.size()-1;
        int left = 0;
        int mid;
        while(right>left)
        {
            mid = (right+left)/2;
            if(mid%2) mid--;
            
            if(nums[mid]==nums[mid+1])
            {
                left = mid+2;
            }
            else
            {
                right = mid;
            }
            
        }
        return nums[left];
    }
};

/*
假如我們默認左子數組中不存在單個數字，則說明中間數對應該是位於一個偶數下標上，如下：
0 1 2 3 4
1 1 3 3 5
    ^
假如單個數字在左子數組，則我們找到的中間位置偶數下標上的數字就不是重複數對的第一個下標：
0 1 2 3 4
1 2 2 3 3
    ^
*/
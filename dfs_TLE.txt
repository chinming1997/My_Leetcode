class Solution { 
public:
    int ans = INT_MAX;
    int minPathSum(vector<vector<int>>& grid)
    {
    if (grid.empty()) return 0;
	int m = grid.size();
	int n = grid[0].size();

	dfs(grid, 0, 0, m, n , 0);

	return ans;
    }
    
    void dfs(vector<vector<int>>& grid, int x, int y, int m, int n , int sum)
    {
	if (x < 0 || y < 0 || x >= n || y >= m ) return;
	sum += grid[y][x];
	if (x == n - 1 && y == m - 1)
	{
		ans = min(sum, ans);
		return;
	}
	dfs(grid, x + 1, y, m, n , sum);
	dfs(grid, x , y + 1, m, n , sum);
    }
};